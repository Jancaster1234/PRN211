<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Jy13kQhSKMwAAAAASUVORK5CYII=
</value>
  </data>
</root>